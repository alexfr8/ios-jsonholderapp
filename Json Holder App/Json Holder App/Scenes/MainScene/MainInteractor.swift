//
//  MainInteractor.swift
//  Json Holder App
//
//  Created by Alejandro Fernández Ruiz on 24/11/2019.
//  Copyright (c) 2019 Alejandro Fernández Ruiz. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainBusinessLogic {
    func setupView()
    func getAllUsers()
    func userSelected(userIndex: Int)
    func getUserCount() -> Int
    func getTodoCount() -> Int
    func getPostCount() -> Int
}

protocol MainDataStore {
    var userList: [User]? { get set }
    var todoList: [Todo]? { get set }
    var postList: [Post]? { get set }
    
}

class MainInteractor: MainBusinessLogic, MainDataStore {
    
    var todoList: [Todo]?
    var postList: [Post]?
    var userList: [User]?
    
    var presenter: MainPresentationLogic?
    var worker: MainWorker?
    
    
    
    func setupView() {
        let response: Main.Models.Response = Main.Models.Response()
        presenter?.setupView(response: response)
    }
    
    func getAllUsers()  {
        worker = MainWorker()
        worker?.getAllUsers(completionHandler: {[weak self] (userList, errorString) in
            if errorString.isEmpty {
                let response = Main.Models.Response()
                self?.presenter?.presentAllUser(response: response)
            } else {
                self?.presenter?.showError(msg: errorString)
            }
        })
    }
    
    func userSelected(userIndex: Int) {
        worker = MainWorker()
        if let user = userList?.getElement(userIndex) {
            worker?.getPostByUserAndTodos(userId: user.id ?? 0, completionHandler: { [weak self] (todoList, postList, errorString) in
                if errorString.isEmpty {
                    var response = Main.Models.Response()
                    response.posts = postList
                    response.todos = todoList
                    self?.presenter?.presentPostAndTodosForUserId(response: response)
                } else {
                    self?.presenter?.showError(msg: errorString)
                }
            })
        }
    }
    
    func getUserCount() -> Int {
        return userList?.count ?? 0
    }
    
    func getTodoList() -> Int {
        return todoList?.count ?? 0
    }
    
    func getPostList() -> Int {
        return postList?.count ?? 0
    }
    
    func getTodoCount() -> Int {
        return todoList?.count ?? 0
    }
    
    func getPostCount() -> Int {
        return postList?.count ?? 0
    }
}
