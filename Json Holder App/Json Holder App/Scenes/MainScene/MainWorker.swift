//
//  MainWorker.swift
//  Json Holder App
//
//  Created by Alejandro Fernández Ruiz on 24/11/2019.
//  Copyright (c) 2019 Alejandro Fernández Ruiz. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class MainWorker {
    
    
    func getAllUsers(completionHandler: @escaping ([User], String) -> Void) {
        JSONHolderManager.shared.fetchUsers { (userResults) in
            switch userResults {
            case .Success(let result):
                completionHandler(result,"")
            case .Failure(let error):
                completionHandler([], error)
                
            }
        }
    }
    
    func getPostByUserAndTodos(userId: Int, completionHandler: @escaping ([Todo],[Post], String) -> Void) {
        var posts: [Post]?
        var todos: [Todo]?
        var apiError: String?
        let group = DispatchGroup()
        group.enter()
        JSONHolderManager.shared.fetchPostsById(userId: userId) { (postResults) in
            switch postResults {
            case .Success(let result):
                posts=result
            case .Failure(let error):
                apiError=error
            }
            group.leave()
        }
        group.enter()
        JSONHolderManager.shared.fetchTodosByUserId(userId: userId) { (todoResults) in
            switch todoResults {
                
            case .Success(let result):
                todos = result
            case .Failure(let error):
                apiError = error
                group.leave()
            }
            
            group.notify(queue: .main) {
                if (apiError?.isEmpty) != nil {
                    completionHandler([],[], apiError ?? "networking.error.generic".localized)
                } else {
                    completionHandler(todos ?? [],posts ?? [],"")
                }
            }
            
        }
        
    }
}
