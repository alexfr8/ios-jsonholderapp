//
//  PostShowViewController.swift
//  Json Holder App
//
//  Created by Alejandro Fernández Ruiz on 26/11/2019.
//  Copyright (c) 2019 Alejandro Fernández Ruiz. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PostShowDisplayLogic: class {
    func setupView(viewModel: PostShow.Models.ViewModel)
}

class PostShowViewController: BaseViewController{
    
    var interactor: PostShowBusinessLogic?
    var router: (NSObjectProtocol & PostShowRoutingLogic & PostShowDataPassing)?
    
    
    //IBOUTLETS
    @IBOutlet weak var viewContainer: UIView!
    
    @IBOutlet weak var lblPost: UILabel!
    @IBOutlet weak var btnClose: UIButton!
    @IBOutlet weak var tableView: UITableView!
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder){
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = PostShowInteractor()
        let presenter = PostShowPresenter()
        let router = PostShowRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
//    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
//    {
//        if let scene = segue.identifier {
//            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
//            if let router = router, router.responds(to: selector) {
//                router.perform(selector, with: segue)
//            }
//        }
//    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        interactor?.setupView()
    }
    
    // MARK: Do something
    
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    @IBAction func btnCloseAction(_ sender: Any) {
    }
    
//    func doSomething()
//    {
//        let request = PostShow.Something.Request()
//        interactor?.doSomething(request: request)
//    }
//

}

extension PostShowViewController :  PostShowDisplayLogic  {
    func setupView(viewModel: PostShow.Models.ViewModel) {
        
        view.backgroundColor = UIColor.clear
        view.isOpaque = false
    }
    
    
}
