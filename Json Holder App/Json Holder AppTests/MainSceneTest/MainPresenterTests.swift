//
//  MainPresenterTests.swift
//  Json Holder App
//
//  Created by Alejandro Fernández Ruiz on 25/11/2019.
//  Copyright (c) 2019 Alejandro Fernández Ruiz. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Json_Holder_App
import XCTest

class MainPresenterTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: MainPresenter!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        setupMainPresenter()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupMainPresenter() {
        sut = MainPresenter()
    }
    
    // MARK: Test doubles
    
    class MainDisplayLogicSpy: MainDisplayLogic {
        
        
        
        var setupViewCalled = false
        var showUserCalled = false
        var showPostForUserCalled = false
        var navigateToPostCommentsCalled = false
        var showErrorCalled = false
        var showCommentForPostCalled = false
        
        func setupView(viewModel: Main.Models.ViewModel) {
            setupViewCalled = true
        }
        
        func showUsers() {
            showUserCalled = true
        }
        
        func showPostForUser(viewModel: Main.Models.ViewModel) {
            showPostForUserCalled = true
        }
        
        func navigateToPostComments(viewModel: Main.Models.ViewModel) {
            navigateToPostCommentsCalled = true
        }
        
        func showError(msg: String) {
            showErrorCalled = true
        }
        
        func showCommentsForPost(viewModel: Main.Models.ViewModel) {
            showCommentForPostCalled = true
        }
        
    }
    
    // MARK: Tests
    
    func testPrepareNavigation() {
        // Given
        let spy = MainDisplayLogicSpy()
        sut.viewController = spy
        let response = Main.Models.Response()
        
        // When
        sut.prepareNavigationFor(response: response)
        
        // Then
        XCTAssertTrue(spy.showCommentForPostCalled, "prepareNavigationFor should call de navigation method")
    }
    
    func testSetupView() {
        // Given
        let spy = MainDisplayLogicSpy()
        sut.viewController = spy
        let response = Main.Models.Response()
        
        // When
        sut.setupView(response: response)
        
        // Then
        XCTAssertTrue(spy.setupViewCalled, "the setup method in the presenter should call the setupview method in the view controller")
    }
    
    func testPresentAllUser() {
        // Given
        let spy = MainDisplayLogicSpy()
        sut.viewController = spy
        
        
        // When
        sut.presentAllUser()
        
        // Then
        XCTAssertTrue(spy.showUserCalled, "this method is a simple bypass to launch the present all user in a collectionview")
    }
    
    func testPresentPostAndTodosForUserId() {
        // Given
        let spy = MainDisplayLogicSpy()
        sut.viewController = spy
        let response = Main.Models.Response()
        
        // When
        sut.presentPostAndTodosForUserId(response: response)
        
        // Then
        XCTAssertTrue(spy.showPostForUserCalled, "this method is a simple bypass to launch the present post and todos when the two web request are complete in a collectionview")
    }
    
    func testShowError() {
        // Given
        let spy = MainDisplayLogicSpy()
        sut.viewController = spy
        
        // When
        sut.showError(msg: "this is a fake msg")
        
        // Then
        XCTAssertTrue(spy.showErrorCalled, "the error method is called")
    }
}
